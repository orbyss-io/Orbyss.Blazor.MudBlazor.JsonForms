@using System.Globalization
@using global::MudBlazor

@typeparam TValue

@code {
    [Parameter]
    public bool ReadOnly { get; set; }

    [Parameter]
    public bool Underline { get; set; }

    [Parameter]
    public bool Disabled { get; set; }

    [Parameter]
    public Color Color { get; set; }

    [Parameter]
    public Variant Variant { get; set; } = Variant.Outlined;

    [Parameter]
    public string? ErrorHelperText { get; set; }

    protected bool HasError => !string.IsNullOrWhiteSpace(ErrorHelperText);

    [Parameter]
    public string? HelperText { get; set; }

    [Parameter]
    public string? Label { get; set; }

    [Parameter]
    public string? Class { get; set; }

    [Parameter]
    public string? PlaceHolder { get; set; }

    [Parameter]
    public CultureInfo? Culture { get; set; }

    [Parameter]
    public TValue Value { get; set; } = default!;

    [Parameter]
    public EventCallback<TValue> OnValueChanged { get; set; }
}
